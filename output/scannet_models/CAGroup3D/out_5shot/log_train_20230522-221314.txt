2023-05-22 22:13:14,718   INFO  **********************Start logging**********************
2023-05-22 22:13:14,719   INFO  CUDA_VISIBLE_DEVICES=0,1,2,3
2023-05-22 22:13:14,719   INFO  total_batch_size: 8
2023-05-22 22:13:14,719   INFO  cfg_file         cfgs/scannet_models/CAGroup3D.yaml
2023-05-22 22:13:14,719   INFO  batch_size       2
2023-05-22 22:13:14,719   INFO  epochs           10
2023-05-22 22:13:14,719   INFO  workers          0
2023-05-22 22:13:14,719   INFO  extra_tag        out_5shot
2023-05-22 22:13:14,720   INFO  ckpt             ../output/scannet_models/CAGroup3D/out_5shot/ckpt/checkpoint_epoch_4.pth
2023-05-22 22:13:14,720   INFO  pretrained_model None
2023-05-22 22:13:14,721   INFO  launcher         pytorch
2023-05-22 22:13:14,721   INFO  tcp_port         18888
2023-05-22 22:13:14,721   INFO  sync_bn          False
2023-05-22 22:13:14,721   INFO  fix_random_seed  True
2023-05-22 22:13:14,721   INFO  ckpt_save_interval 1
2023-05-22 22:13:14,722   INFO  local_rank       0
2023-05-22 22:13:14,722   INFO  max_ckpt_save_num 30
2023-05-22 22:13:14,722   INFO  merge_all_iters_to_one_epoch False
2023-05-22 22:13:14,722   INFO  set_cfgs         None
2023-05-22 22:13:14,722   INFO  max_waiting_mins 0
2023-05-22 22:13:14,722   INFO  start_epoch      0
2023-05-22 22:13:14,722   INFO  num_epochs_to_eval 0
2023-05-22 22:13:14,722   INFO  save_to_file     False
2023-05-22 22:13:14,722   INFO  cfg.ROOT_DIR: /research/dept8/gds/mjzhou21/CAGroup3D_DEFRCN
2023-05-22 22:13:14,723   INFO  cfg.LOCAL_RANK: 0
2023-05-22 22:13:14,723   INFO  cfg.CLASS_NAMES: ['cabinet', 'bed', 'chair', 'sofa', 'table', 'door', 'window', 'bookshelf', 'picture', 'counter', 'desk', 'curtain', 'refrigerator', 'showercurtrain', 'toilet', 'sink', 'bathtub', 'garbagebin']
2023-05-22 22:13:14,723   INFO  
cfg.DATA_CONFIG = edict()
2023-05-22 22:13:14,723   INFO  cfg.DATA_CONFIG.DATASET: ScannetDataset
2023-05-22 22:13:14,723   INFO  cfg.DATA_CONFIG.DATA_PATH: /research/dept8/gds/mjzhou21/data/PCOD/data/fs_scannet_split_0
2023-05-22 22:13:14,723   INFO  cfg.DATA_CONFIG.PROCESSED_DATA_TAG: scannet_processed_data_v0_5_0
2023-05-22 22:13:14,723   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [-40, -40, -10, 40, 40, 10]
2023-05-22 22:13:14,723   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2023-05-22 22:13:14,724   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2023-05-22 22:13:14,724   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2023-05-22 22:13:14,724   INFO  
cfg.DATA_CONFIG.REPEAT = edict()
2023-05-22 22:13:14,724   INFO  cfg.DATA_CONFIG.REPEAT.train: 10
2023-05-22 22:13:14,724   INFO  cfg.DATA_CONFIG.REPEAT.test: 1
2023-05-22 22:13:14,724   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2023-05-22 22:13:14,724   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['5_shot/scannet_infos_train_v0.pkl']
2023-05-22 22:13:14,724   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['scannet_infos_val.pkl']
2023-05-22 22:13:14,724   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points', 'instance_mask', 'semantic_mask']
2023-05-22 22:13:14,725   INFO  cfg.DATA_CONFIG.FILTER_EMPTY_BOXES_FOR_TRAIN: True
2023-05-22 22:13:14,725   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR_TRAIN = edict()
2023-05-22 22:13:14,725   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR_TRAIN.DISABLE_AUG_LIST: ['placeholder']
2023-05-22 22:13:14,725   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR_TRAIN.AUG_CONFIG_LIST: [{'NAME': 'global_alignment', 'rotation_axis': 2}, {'NAME': 'point_seg_class_mapping', 'valid_cat_ids': [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 24, 28, 33, 34, 36, 39], 'max_cat_id': 40}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x', 'y']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.087266, 0.087266]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.9, 1.1]}, {'NAME': 'random_world_translation', 'ALONG_AXIS_LIST': ['x', 'y', 'z'], 'NOISE_TRANSLATE_STD': 0.1}]
2023-05-22 22:13:14,725   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR_TEST = edict()
2023-05-22 22:13:14,725   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR_TEST.DISABLE_AUG_LIST: ['placeholder']
2023-05-22 22:13:14,725   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR_TEST.AUG_CONFIG_LIST: [{'NAME': 'global_alignment', 'rotation_axis': 2}]
2023-05-22 22:13:14,725   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2023-05-22 22:13:14,726   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2023-05-22 22:13:14,726   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'global_alignment', 'rotation_axis': 2}]
2023-05-22 22:13:14,726   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2023-05-22 22:13:14,726   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2023-05-22 22:13:14,726   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'r', 'g', 'b']
2023-05-22 22:13:14,726   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'r', 'g', 'b']
2023-05-22 22:13:14,726   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}]
2023-05-22 22:13:14,726   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/scannet_dataset.yaml
2023-05-22 22:13:14,726   INFO  cfg.VOXEL_SIZE: 0.02
2023-05-22 22:13:14,727   INFO  cfg.N_CLASSES: 18
2023-05-22 22:13:14,727   INFO  cfg.SEMANTIC_THR: 0.15
2023-05-22 22:13:14,727   INFO  
cfg.MODEL = edict()
2023-05-22 22:13:14,727   INFO  cfg.MODEL.NAME: CAGroup3D
2023-05-22 22:13:14,727   INFO  cfg.MODEL.VOXEL_SIZE: 0.02
2023-05-22 22:13:14,727   INFO  cfg.MODEL.SEMANTIC_MIN_THR: 0.05
2023-05-22 22:13:14,727   INFO  cfg.MODEL.SEMANTIC_ITER_VALUE: 0.02
2023-05-22 22:13:14,727   INFO  cfg.MODEL.SEMANTIC_THR: 0.15
2023-05-22 22:13:14,727   INFO  
cfg.MODEL.BACKBONE_3D = edict()
2023-05-22 22:13:14,728   INFO  cfg.MODEL.BACKBONE_3D.NAME: BiResNet
2023-05-22 22:13:14,728   INFO  cfg.MODEL.BACKBONE_3D.IN_CHANNELS: 3
2023-05-22 22:13:14,728   INFO  cfg.MODEL.BACKBONE_3D.OUT_CHANNELS: 64
2023-05-22 22:13:14,728   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2023-05-22 22:13:14,728   INFO  cfg.MODEL.DENSE_HEAD.NAME: CAGroup3DHead
2023-05-22 22:13:14,728   INFO  cfg.MODEL.DENSE_HEAD.IN_CHANNELS: [64, 128, 256, 512]
2023-05-22 22:13:14,728   INFO  cfg.MODEL.DENSE_HEAD.OUT_CHANNELS: 64
2023-05-22 22:13:14,728   INFO  cfg.MODEL.DENSE_HEAD.SEMANTIC_THR: 0.15
2023-05-22 22:13:14,728   INFO  cfg.MODEL.DENSE_HEAD.VOXEL_SIZE: 0.02
2023-05-22 22:13:14,729   INFO  cfg.MODEL.DENSE_HEAD.N_CLASSES: 18
2023-05-22 22:13:14,729   INFO  cfg.MODEL.DENSE_HEAD.N_REG_OUTS: 6
2023-05-22 22:13:14,729   INFO  cfg.MODEL.DENSE_HEAD.CLS_KERNEL: 9
2023-05-22 22:13:14,729   INFO  cfg.MODEL.DENSE_HEAD.WITH_YAW: False
2023-05-22 22:13:14,729   INFO  cfg.MODEL.DENSE_HEAD.USE_SEM_SCORE: False
2023-05-22 22:13:14,729   INFO  cfg.MODEL.DENSE_HEAD.EXPAND_RATIO: 3
2023-05-22 22:13:14,729   INFO  
cfg.MODEL.DENSE_HEAD.ASSIGNER = edict()
2023-05-22 22:13:14,729   INFO  cfg.MODEL.DENSE_HEAD.ASSIGNER.NAME: CAGroup3DAssigner
2023-05-22 22:13:14,729   INFO  cfg.MODEL.DENSE_HEAD.ASSIGNER.LIMIT: 27
2023-05-22 22:13:14,730   INFO  cfg.MODEL.DENSE_HEAD.ASSIGNER.TOPK: 18
2023-05-22 22:13:14,730   INFO  cfg.MODEL.DENSE_HEAD.ASSIGNER.N_SCALES: 4
2023-05-22 22:13:14,730   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_OFFSET = edict()
2023-05-22 22:13:14,730   INFO  cfg.MODEL.DENSE_HEAD.LOSS_OFFSET.NAME: SmoothL1Loss
2023-05-22 22:13:14,730   INFO  cfg.MODEL.DENSE_HEAD.LOSS_OFFSET.BETA: 0.04
2023-05-22 22:13:14,730   INFO  cfg.MODEL.DENSE_HEAD.LOSS_OFFSET.REDUCTION: sum
2023-05-22 22:13:14,730   INFO  cfg.MODEL.DENSE_HEAD.LOSS_OFFSET.LOSS_WEIGHT: 1.0
2023-05-22 22:13:14,730   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_BBOX = edict()
2023-05-22 22:13:14,730   INFO  cfg.MODEL.DENSE_HEAD.LOSS_BBOX.NAME: IoU3DLoss
2023-05-22 22:13:14,731   INFO  cfg.MODEL.DENSE_HEAD.LOSS_BBOX.WITH_YAW: False
2023-05-22 22:13:14,731   INFO  cfg.MODEL.DENSE_HEAD.LOSS_BBOX.LOSS_WEIGHT: 1.0
2023-05-22 22:13:14,731   INFO  
cfg.MODEL.DENSE_HEAD.NMS_CONFIG = edict()
2023-05-22 22:13:14,731   INFO  cfg.MODEL.DENSE_HEAD.NMS_CONFIG.SCORE_THR: 0.01
2023-05-22 22:13:14,731   INFO  cfg.MODEL.DENSE_HEAD.NMS_CONFIG.NMS_PRE: 1000
2023-05-22 22:13:14,731   INFO  cfg.MODEL.DENSE_HEAD.NMS_CONFIG.IOU_THR: 0.5
2023-05-22 22:13:14,731   INFO  
cfg.MODEL.ROI_HEAD = edict()
2023-05-22 22:13:14,731   INFO  cfg.MODEL.ROI_HEAD.NAME: CAGroup3DRoIHead
2023-05-22 22:13:14,732   INFO  cfg.MODEL.ROI_HEAD.NUM_CLASSES: 18
2023-05-22 22:13:14,732   INFO  cfg.MODEL.ROI_HEAD.MIDDLE_FEATURE_SOURCE: [3]
2023-05-22 22:13:14,732   INFO  cfg.MODEL.ROI_HEAD.GRID_SIZE: 7
2023-05-22 22:13:14,732   INFO  cfg.MODEL.ROI_HEAD.VOXEL_SIZE: 0.02
2023-05-22 22:13:14,732   INFO  cfg.MODEL.ROI_HEAD.COORD_KEY: 2
2023-05-22 22:13:14,732   INFO  cfg.MODEL.ROI_HEAD.MLPS: [[64, 128, 128]]
2023-05-22 22:13:14,732   INFO  cfg.MODEL.ROI_HEAD.CODE_SIZE: 6
2023-05-22 22:13:14,732   INFO  cfg.MODEL.ROI_HEAD.ENCODE_SINCOS: False
2023-05-22 22:13:14,732   INFO  cfg.MODEL.ROI_HEAD.ROI_PER_IMAGE: 128
2023-05-22 22:13:14,733   INFO  cfg.MODEL.ROI_HEAD.ROI_FG_RATIO: 0.9
2023-05-22 22:13:14,733   INFO  cfg.MODEL.ROI_HEAD.REG_FG_THRESH: 0.3
2023-05-22 22:13:14,733   INFO  cfg.MODEL.ROI_HEAD.ROI_CONV_KERNEL: 5
2023-05-22 22:13:14,733   INFO  cfg.MODEL.ROI_HEAD.ENLARGE_RATIO: False
2023-05-22 22:13:14,733   INFO  cfg.MODEL.ROI_HEAD.USE_IOU_LOSS: False
2023-05-22 22:13:14,733   INFO  cfg.MODEL.ROI_HEAD.USE_GRID_OFFSET: False
2023-05-22 22:13:14,733   INFO  cfg.MODEL.ROI_HEAD.USE_SIMPLE_POOLING: True
2023-05-22 22:13:14,733   INFO  cfg.MODEL.ROI_HEAD.USE_CENTER_POOLING: True
2023-05-22 22:13:14,733   INFO  
cfg.MODEL.ROI_HEAD.LOSS_WEIGHTS = edict()
2023-05-22 22:13:14,733   INFO  cfg.MODEL.ROI_HEAD.LOSS_WEIGHTS.RCNN_CLS_WEIGHT: 1.0
2023-05-22 22:13:14,733   INFO  cfg.MODEL.ROI_HEAD.LOSS_WEIGHTS.RCNN_REG_WEIGHT: 1.0
2023-05-22 22:13:14,733   INFO  cfg.MODEL.ROI_HEAD.LOSS_WEIGHTS.RCNN_IOU_WEIGHT: 1.0
2023-05-22 22:13:14,733   INFO  cfg.MODEL.ROI_HEAD.LOSS_WEIGHTS.CODE_WEIGHT: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2023-05-22 22:13:14,733   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2023-05-22 22:13:14,733   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.25, 0.5]
2023-05-22 22:13:14,733   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: scannet
2023-05-22 22:13:14,733   INFO  
cfg.OPTIMIZATION = edict()
2023-05-22 22:13:14,734   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 2
2023-05-22 22:13:14,734   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 10
2023-05-22 22:13:14,734   INFO  cfg.OPTIMIZATION.OPTIMIZER: adamW
2023-05-22 22:13:14,734   INFO  cfg.OPTIMIZATION.LR: 0.001
2023-05-22 22:13:14,734   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.0001
2023-05-22 22:13:14,734   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [7, 9]
2023-05-22 22:13:14,734   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2023-05-22 22:13:14,734   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2023-05-22 22:13:14,734   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2023-05-22 22:13:14,734   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2023-05-22 22:13:14,734   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2023-05-22 22:13:14,734   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2023-05-22 22:13:14,734   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2023-05-22 22:13:14,734   INFO  cfg.TAG: CAGroup3D
2023-05-22 22:13:14,734   INFO  cfg.EXP_GROUP_PATH: scannet_models
2023-05-22 22:13:14,798   INFO  Loading SCANNET dataset
2023-05-22 22:13:14,847   INFO  Total samples for SCANNET dataset: 1202
2023-05-22 22:13:21,767   INFO  ==> Loading parameters from checkpoint ../output/scannet_models/CAGroup3D/out_5shot/ckpt/checkpoint_epoch_4.pth to CPU
2023-05-22 22:13:22,964   INFO  ==> Loading optimizer parameters from checkpoint ../output/scannet_models/CAGroup3D/out_5shot/ckpt/checkpoint_epoch_4.pth to CPU
2023-05-22 22:13:23,897   INFO  ==> Done
2023-05-22 22:13:24,560   INFO  DistributedDataParallel(
  (module): CAGroup3D(
    (vfe): None
    (backbone_3d): BiResNet(
      (conv1): Sequential(
        (0): MinkowskiConvolution(in=3, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): MinkowskiReLU()
        (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): MinkowskiReLU()
      )
      (relu): MinkowskiReLU()
      (layer1): Sequential(
        (0): BasicBlock(
          (conv1): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[2, 2, 2], dilation=[1, 1, 1])
          (norm1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm2): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): MinkowskiReLU()
          (downsample): Sequential(
            (0): MinkowskiConvolution(in=64, out=64, kernel_size=[1, 1, 1], stride=[2, 2, 2], dilation=[1, 1, 1])
            (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm2): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): MinkowskiReLU()
        )
      )
      (layer2): Sequential(
        (0): BasicBlock(
          (conv1): MinkowskiConvolution(in=64, out=128, kernel_size=[3, 3, 3], stride=[2, 2, 2], dilation=[1, 1, 1])
          (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): MinkowskiReLU()
          (downsample): Sequential(
            (0): MinkowskiConvolution(in=64, out=128, kernel_size=[1, 1, 1], stride=[2, 2, 2], dilation=[1, 1, 1])
            (1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): MinkowskiReLU()
        )
      )
      (layer3): Sequential(
        (0): BasicBlock(
          (conv1): MinkowskiConvolution(in=128, out=256, kernel_size=[3, 3, 3], stride=[2, 2, 2], dilation=[1, 1, 1])
          (norm1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm2): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): MinkowskiReLU()
          (downsample): Sequential(
            (0): MinkowskiConvolution(in=128, out=256, kernel_size=[1, 1, 1], stride=[2, 2, 2], dilation=[1, 1, 1])
            (1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): MinkowskiConvolution(in=256, out=256, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm2): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): MinkowskiReLU()
        )
      )
      (layer4): Sequential(
        (0): BasicBlock(
          (conv1): MinkowskiConvolution(in=256, out=512, kernel_size=[3, 3, 3], stride=[2, 2, 2], dilation=[1, 1, 1])
          (norm1): MinkowskiBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): MinkowskiConvolution(in=512, out=512, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm2): MinkowskiBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): MinkowskiReLU()
          (downsample): Sequential(
            (0): MinkowskiConvolution(in=256, out=512, kernel_size=[1, 1, 1], stride=[2, 2, 2], dilation=[1, 1, 1])
            (1): MinkowskiBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): MinkowskiConvolution(in=512, out=512, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm1): MinkowskiBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): MinkowskiConvolution(in=512, out=512, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm2): MinkowskiBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): MinkowskiReLU()
        )
      )
      (compression3): Sequential(
        (0): MinkowskiConvolution(in=256, out=128, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (compression4): Sequential(
        (0): MinkowskiConvolution(in=512, out=128, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (down3): Sequential(
        (0): MinkowskiConvolution(in=128, out=256, kernel_size=[3, 3, 3], stride=[2, 2, 2], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (down4): Sequential(
        (0): MinkowskiConvolution(in=128, out=256, kernel_size=[3, 3, 3], stride=[2, 2, 2], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): MinkowskiReLU()
        (3): MinkowskiConvolution(in=256, out=512, kernel_size=[3, 3, 3], stride=[2, 2, 2], dilation=[1, 1, 1])
        (4): MinkowskiBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (layer3_): Sequential(
        (0): BasicBlock(
          (conv1): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): MinkowskiReLU()
        )
        (1): BasicBlock(
          (conv1): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): MinkowskiReLU()
        )
      )
      (layer4_): Sequential(
        (0): BasicBlock(
          (conv1): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): MinkowskiReLU()
        )
        (1): BasicBlock(
          (conv1): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): MinkowskiReLU()
        )
      )
      (layer5_): Sequential(
        (0): Bottleneck(
          (conv1): MinkowskiConvolution(in=128, out=128, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm1): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm2): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): MinkowskiConvolution(in=128, out=256, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm3): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): MinkowskiReLU()
          (downsample): Sequential(
            (0): MinkowskiConvolution(in=128, out=256, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
            (1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (layer5): Sequential(
        (0): Bottleneck(
          (conv1): MinkowskiConvolution(in=512, out=512, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm1): MinkowskiBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): MinkowskiConvolution(in=512, out=512, kernel_size=[3, 3, 3], stride=[2, 2, 2], dilation=[1, 1, 1])
          (norm2): MinkowskiBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): MinkowskiConvolution(in=512, out=1024, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (norm3): MinkowskiBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): MinkowskiReLU()
          (downsample): Sequential(
            (0): MinkowskiConvolution(in=512, out=1024, kernel_size=[1, 1, 1], stride=[2, 2, 2], dilation=[1, 1, 1])
            (1): MinkowskiBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (spp): DAPPM(
        (scale1): Sequential(
          (0): MinkowskiAvgPooling(kernel_size=[5, 5, 5], stride=[2, 2, 2], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiReLU()
          (3): MinkowskiConvolution(in=1024, out=128, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        )
        (scale2): Sequential(
          (0): MinkowskiAvgPooling(kernel_size=[9, 9, 9], stride=[4, 4, 4], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiReLU()
          (3): MinkowskiConvolution(in=1024, out=128, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        )
        (scale3): Sequential(
          (0): MinkowskiAvgPooling(kernel_size=[17, 17, 17], stride=[8, 8, 8], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiReLU()
          (3): MinkowskiConvolution(in=1024, out=128, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        )
        (scale4): Sequential(
          (0): MinkowskiAvgPooling(kernel_size=[33, 33, 33], stride=[16, 16, 16], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiReLU()
          (3): MinkowskiConvolution(in=1024, out=128, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        )
        (scale0): Sequential(
          (0): MinkowskiBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): MinkowskiReLU()
          (2): MinkowskiConvolution(in=1024, out=128, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        )
        (process1): Sequential(
          (0): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): MinkowskiReLU()
          (2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        )
        (process2): Sequential(
          (0): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): MinkowskiReLU()
          (2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        )
        (process3): Sequential(
          (0): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): MinkowskiReLU()
          (2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        )
        (process4): Sequential(
          (0): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): MinkowskiReLU()
          (2): MinkowskiConvolution(in=128, out=128, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        )
        (compression): Sequential(
          (0): MinkowskiBatchNorm(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): MinkowskiReLU()
          (2): MinkowskiConvolution(in=640, out=256, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        )
        (shortcut): Sequential(
          (0): MinkowskiBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): MinkowskiReLU()
          (2): MinkowskiConvolution(in=1024, out=256, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        )
      )
      (out): Sequential(
        (0): MinkowskiConvolutionTranspose(in=256, out=256, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): MinkowskiReLU()
        (3): MinkowskiConvolution(in=256, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): MinkowskiReLU()
      )
    )
    (map_to_bev_module): None
    (pfe): None
    (backbone_2d): None
    (dense_head): CAGroup3DHead(
      (loss_centerness): CrossEntropy()
      (loss_bbox): IoU3DLoss()
      (loss_cls): FocalLoss()
      (loss_sem): FocalLoss()
      (loss_offset): SmoothL1Loss()
      (offset_block): Sequential(
        (0): MinkowskiConvolution(in=64, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): MinkowskiELU()
        (3): MinkowskiConvolution(in=64, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): MinkowskiELU()
        (6): MinkowskiConvolution(in=64, out=3, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
      )
      (feature_offset): Sequential(
        (0): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): MinkowskiELU()
      )
      (semantic_conv): MinkowskiConvolution(in=64, out=18, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
      (centerness_conv): MinkowskiConvolution(in=64, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
      (reg_conv): MinkowskiConvolution(in=64, out=6, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
      (cls_conv): MinkowskiConvolution(in=64, out=18, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
        (3): Scale()
        (4): Scale()
        (5): Scale()
        (6): Scale()
        (7): Scale()
        (8): Scale()
        (9): Scale()
        (10): Scale()
        (11): Scale()
        (12): Scale()
        (13): Scale()
        (14): Scale()
        (15): Scale()
        (16): Scale()
        (17): Scale()
      )
      (cls_individual_out): ModuleList(
        (0): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (1): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (2): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (3): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (4): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (5): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (6): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (7): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (8): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (9): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (10): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (11): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (12): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (13): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (14): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (15): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (16): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (17): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[9, 9, 9], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
      )
      (cls_individual_up): ModuleList(
        (0): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (1): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (2): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (3): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (4): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (5): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (6): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (7): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (8): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (9): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (10): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (11): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (12): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (13): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (14): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (15): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (16): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
        (17): ModuleList(
          (0): MinkowskiGenerativeConvolutionTranspose(in=64, out=64, kernel_size=[3, 3, 3], stride=[3, 3, 3], dilation=[1, 1, 1])
          (1): Sequential(
            (0): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): MinkowskiELU()
          )
        )
      )
      (cls_individual_fuse): ModuleList(
        (0): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (1): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (2): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (3): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (4): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (5): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (6): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (7): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (8): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (9): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (10): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (11): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (12): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (13): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (14): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (15): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (16): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (17): Sequential(
          (0): MinkowskiConvolution(in=128, out=64, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
      )
      (cls_individual_expand_out): ModuleList(
        (0): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (1): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (2): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (3): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (4): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (5): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (6): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (7): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (8): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (9): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (10): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (11): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (12): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (13): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (14): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (15): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (16): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
        (17): Sequential(
          (0): MinkowskiConvolution(in=64, out=64, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): MinkowskiELU()
        )
      )
    )
    (point_head): None
    (roi_head): CAGroup3DRoIHead(
      (proposal_target_layer): ProposalTargetLayer()
      (reg_loss_func): WeightedSmoothL1Loss()
      (roi_grid_pool_layers): ModuleList(
        (0): SimplePoolingLayer(
          (grid_conv): MinkowskiConvolution(in=64, out=128, kernel_size=[5, 5, 5], stride=[1, 1, 1], dilation=[1, 1, 1])
          (grid_bn): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (grid_relu): MinkowskiELU()
          (pooling_conv): MinkowskiConvolution(in=128, out=128, kernel_size=[7, 7, 7], stride=[1, 1, 1], dilation=[1, 1, 1])
          (pooling_bn): MinkowskiBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (reg_fc_layers): Sequential(
        (0): Linear(in_features=128, out_features=256, bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): Dropout(p=0.3, inplace=False)
        (4): Linear(in_features=256, out_features=256, bias=False)
        (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU()
      )
      (reg_pred_layer): Linear(in_features=256, out_features=6, bias=True)
    )
    (affine_rpn): AffineLayer()
    (affine_rcnn): AffineLayer()
  )
)
2023-05-22 22:13:24,572   INFO  **********************Start training scannet_models/CAGroup3D(out_5shot)**********************
2023-05-22 22:14:47,519   INFO  Epoch [ 5][  50]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6274029684066772, loss_bbox: 0.380622127354145, loss_cls: 0.2845620909333229, loss_sem: 0.3976841813325882, loss_vote: 0.192337846159935, one_stage_loss: 1.882609214782715, rcnn_loss_reg: 0.4399048513174057, loss_two_stage: 0.4399048513174057, 
2023-05-22 22:16:08,138   INFO  Epoch [ 5][ 100]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6802189588546753, loss_bbox: 0.4387118136882782, loss_cls: 0.3183170947432518, loss_sem: 0.44286064147949217, loss_vote: 0.20514971941709517, one_stage_loss: 2.085258228778839, rcnn_loss_reg: 0.4402904933691025, loss_two_stage: 0.4402904933691025, 
2023-05-22 22:17:26,519   INFO  Epoch [ 5][ 150]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6406131464242936, loss_bbox: 0.39659507751464845, loss_cls: 0.29460368990898134, loss_sem: 0.42236695110797884, loss_vote: 0.22245737962424755, one_stage_loss: 1.9766362196207046, rcnn_loss_reg: 0.4433883261680603, loss_two_stage: 0.4433883261680603, 
2023-05-22 22:18:49,921   INFO  Epoch [ 5][ 200]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.7284454852342606, loss_bbox: 0.45938095211982727, loss_cls: 0.33067563563585284, loss_sem: 0.4536751163005829, loss_vote: 0.21972302883863448, one_stage_loss: 2.1919002103805543, rcnn_loss_reg: 0.4494762444496155, loss_two_stage: 0.4494762444496155, 
2023-05-22 22:20:16,088   INFO  Epoch [ 5][ 250]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6207788473367691, loss_bbox: 0.3898311358690262, loss_cls: 0.28127726808190345, loss_sem: 0.40662292659282684, loss_vote: 0.2042370072007179, one_stage_loss: 1.9027471923828125, rcnn_loss_reg: 0.43904280006885527, loss_two_stage: 0.43904280006885527, 
2023-05-22 22:21:37,819   INFO  Epoch [ 5][ 300]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6646843409538269, loss_bbox: 0.41884183913469314, loss_cls: 0.304420398324728, loss_sem: 0.43526120245456695, loss_vote: 0.19366394922137262, one_stage_loss: 2.0168717086315153, rcnn_loss_reg: 0.4443557196855545, loss_two_stage: 0.4443557196855545, 
2023-05-22 22:22:57,668   INFO  Epoch [ 5][ 350]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6710071414709091, loss_bbox: 0.41350666791200635, loss_cls: 0.29844499081373216, loss_sem: 0.4020970803499222, loss_vote: 0.1829889516532421, one_stage_loss: 1.9680448436737061, rcnn_loss_reg: 0.45264398753643037, loss_two_stage: 0.45264398753643037, 
2023-05-22 22:24:16,945   INFO  Epoch [ 5][ 400]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6559720078110695, loss_bbox: 0.42430460929870606, loss_cls: 0.3072992721199989, loss_sem: 0.4064648547768593, loss_vote: 0.17744877740740775, one_stage_loss: 1.9714895188808441, rcnn_loss_reg: 0.4467902487516403, loss_two_stage: 0.4467902487516403, 
2023-05-22 22:25:37,384   INFO  Epoch [ 5][ 450]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.7025120940804481, loss_bbox: 0.4466982078552246, loss_cls: 0.3275795555114746, loss_sem: 0.4514146476984024, loss_vote: 0.21685255378484725, one_stage_loss: 2.1450570595264433, rcnn_loss_reg: 0.45516613245010373, loss_two_stage: 0.45516613245010373, 
2023-05-22 22:26:58,455   INFO  Epoch [ 5][ 500]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6381667447090149, loss_bbox: 0.3941251087188721, loss_cls: 0.2768191745877266, loss_sem: 0.40349808692932126, loss_vote: 0.20068090438842773, one_stage_loss: 1.9132900047302246, rcnn_loss_reg: 0.4292131906747818, loss_two_stage: 0.4292131906747818, 
2023-05-22 22:28:19,058   INFO  Epoch [ 5][ 550]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.5938933879137039, loss_bbox: 0.3743039971590042, loss_cls: 0.2816318586468697, loss_sem: 0.40063106149435046, loss_vote: 0.21019292667508124, one_stage_loss: 1.8606532275676728, rcnn_loss_reg: 0.43970210760831835, loss_two_stage: 0.43970210760831835, 
2023-05-22 22:29:39,970   INFO  Epoch [ 5][ 600]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6138926047086716, loss_bbox: 0.3743226012587547, loss_cls: 0.2677307683229446, loss_sem: 0.3902921196818352, loss_vote: 0.19801882587373257, one_stage_loss: 1.8442569279670715, rcnn_loss_reg: 0.4179193931818008, loss_two_stage: 0.4179193931818008, 
2023-05-22 22:31:02,405   INFO  Epoch [ 5][ 650]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6705309069156646, loss_bbox: 0.4176566413044929, loss_cls: 0.30655147299170493, loss_sem: 0.41281624913215637, loss_vote: 0.19646333530545235, one_stage_loss: 2.0040186125040056, rcnn_loss_reg: 0.43363577365875244, loss_two_stage: 0.43363577365875244, 
2023-05-22 22:32:22,791   INFO  Epoch [ 5][ 700]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.60706807076931, loss_bbox: 0.3767993450164795, loss_cls: 0.26659878745675086, loss_sem: 0.3919059810042381, loss_vote: 0.18348003610968588, one_stage_loss: 1.8258522379398345, rcnn_loss_reg: 0.4114630627632141, loss_two_stage: 0.4114630627632141, 
2023-05-22 22:33:44,794   INFO  Epoch [ 5][ 750]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.5920615869760514, loss_bbox: 0.36958004742860795, loss_cls: 0.26511913672089576, loss_sem: 0.3961061772704124, loss_vote: 0.19350344128906727, one_stage_loss: 1.816370402574539, rcnn_loss_reg: 0.44285657703876496, loss_two_stage: 0.44285657703876496, 
2023-05-22 22:35:08,128   INFO  Epoch [ 5][ 800]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6326424604654313, loss_bbox: 0.3943120664358139, loss_cls: 0.28425499603152277, loss_sem: 0.4185227444767952, loss_vote: 0.19911278262734414, one_stage_loss: 1.9288450491428375, rcnn_loss_reg: 0.4403634649515152, loss_two_stage: 0.4403634649515152, 
2023-05-22 22:36:25,349   INFO  Epoch [ 5][ 850]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6279603007435799, loss_bbox: 0.3892317032814026, loss_cls: 0.2816901439428329, loss_sem: 0.4149481064081192, loss_vote: 0.1932229746133089, one_stage_loss: 1.9070532190799714, rcnn_loss_reg: 0.4461184573173523, loss_two_stage: 0.4461184573173523, 
2023-05-22 22:37:48,269   INFO  Epoch [ 5][ 900]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6166381078958512, loss_bbox: 0.3658885943889618, loss_cls: 0.26351890921592713, loss_sem: 0.39751275569200517, loss_vote: 0.19322245083749295, one_stage_loss: 1.8367808163166046, rcnn_loss_reg: 0.43424917459487916, loss_two_stage: 0.43424917459487916, 
2023-05-22 22:39:09,480   INFO  Epoch [ 5][ 950]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6726913851499557, loss_bbox: 0.42802205741405486, loss_cls: 0.3059979750216007, loss_sem: 0.4115896254777908, loss_vote: 0.22125897526741028, one_stage_loss: 2.0395599925518035, rcnn_loss_reg: 0.460837208032608, loss_two_stage: 0.460837208032608, 
2023-05-22 22:40:28,726   INFO  Epoch [ 5][1000]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6124479931592941, loss_bbox: 0.3720729097723961, loss_cls: 0.2709303578734398, loss_sem: 0.41390249878168106, loss_vote: 0.19813116520643234, one_stage_loss: 1.867484918832779, rcnn_loss_reg: 0.435155885219574, loss_two_stage: 0.435155885219574, 
2023-05-22 22:41:49,684   INFO  Epoch [ 5][1050]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6384427911043167, loss_bbox: 0.38681236922740936, loss_cls: 0.29071557983756063, loss_sem: 0.4086577442288399, loss_vote: 0.19163788348436356, one_stage_loss: 1.9162663662433623, rcnn_loss_reg: 0.42648834705352784, loss_two_stage: 0.42648834705352784, 
2023-05-22 22:43:12,192   INFO  Epoch [ 5][1100]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6769189190864563, loss_bbox: 0.4250896432995796, loss_cls: 0.321732365489006, loss_sem: 0.41987734436988833, loss_vote: 0.19246704764664174, one_stage_loss: 2.03608531832695, rcnn_loss_reg: 0.43090230286121367, loss_two_stage: 0.43090230286121367, 
2023-05-22 22:44:33,547   INFO  Epoch [ 5][1150]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6440739758312702, loss_bbox: 0.4011654957383871, loss_cls: 0.2861035817861557, loss_sem: 0.40969873815774915, loss_vote: 0.1804389125853777, one_stage_loss: 1.9214807116985322, rcnn_loss_reg: 0.4345722150802612, loss_two_stage: 0.4345722150802612, 
2023-05-22 22:45:56,628   INFO  Epoch [ 5][1200]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.7283029633760453, loss_bbox: 0.4502770084142685, loss_cls: 0.3175377669930458, loss_sem: 0.45825694024562835, loss_vote: 0.2113747464120388, one_stage_loss: 2.1657493996620176, rcnn_loss_reg: 0.4407069301605225, loss_two_stage: 0.4407069301605225, 
2023-05-22 22:47:19,589   INFO  Epoch [ 5][1250]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.7020305907726287, loss_bbox: 0.4344160437583923, loss_cls: 0.3190204820036888, loss_sem: 0.40769403755664824, loss_vote: 0.1986967407166958, one_stage_loss: 2.0618578791618347, rcnn_loss_reg: 0.44920475006103516, loss_two_stage: 0.44920475006103516, 
2023-05-22 22:48:42,102   INFO  Epoch [ 5][1300]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6597776460647583, loss_bbox: 0.41855370074510573, loss_cls: 0.2981498154997826, loss_sem: 0.42661042511463165, loss_vote: 0.218934585750103, one_stage_loss: 2.0220261788368226, rcnn_loss_reg: 0.4564737492799759, loss_two_stage: 0.4564737492799759, 
2023-05-22 22:50:05,593   INFO  Epoch [ 5][1350]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6418897813558578, loss_bbox: 0.3929967060685158, loss_cls: 0.29631614550948143, loss_sem: 0.4291255342960358, loss_vote: 0.21178973272442816, one_stage_loss: 1.9721179056167601, rcnn_loss_reg: 0.44205912232398986, loss_two_stage: 0.44205912232398986, 
2023-05-22 22:51:28,436   INFO  Epoch [ 5][1400]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.623193025290966, loss_bbox: 0.3886967878043652, loss_cls: 0.2892745572328568, loss_sem: 0.40776066213846207, loss_vote: 0.18705942131578923, one_stage_loss: 1.8959844541549682, rcnn_loss_reg: 0.45482554256916047, loss_two_stage: 0.45482554256916047, 
2023-05-22 22:52:52,151   INFO  Epoch [ 5][1450]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6745792716741562, loss_bbox: 0.41152625530958176, loss_cls: 0.3064621712267399, loss_sem: 0.41197097092866897, loss_vote: 0.20826451301574708, one_stage_loss: 2.0128031730651856, rcnn_loss_reg: 0.4424348366260529, loss_two_stage: 0.4424348366260529, 
2023-05-22 22:54:16,244   INFO  Epoch [ 5][1500]/[1502] : lr:  1.000e-03, sem_thr: 0.07, loss_centerness: 0.6089098587632179, loss_bbox: 0.3874399583041668, loss_cls: 0.2920253151655197, loss_sem: 0.41636941134929656, loss_vote: 0.1891723284870386, one_stage_loss: 1.8939168828725814, rcnn_loss_reg: 0.44037306725978853, loss_two_stage: 0.44037306725978853, 
2023-05-22 22:55:53,429   INFO  Epoch [ 6][  50]/[1502] : lr:  1.000e-03, sem_thr: 0.05, loss_centerness: 0.6765976455807686, loss_bbox: 0.41599600329995157, loss_cls: 0.30162547558546066, loss_sem: 0.4385412546992302, loss_vote: 0.2118662875890732, one_stage_loss: 2.0446266639232635, rcnn_loss_reg: 0.44434356689453125, loss_two_stage: 0.44434356689453125, 
2023-05-22 22:57:21,432   INFO  Epoch [ 6][ 100]/[1502] : lr:  1.000e-03, sem_thr: 0.05, loss_centerness: 0.6561014306545258, loss_bbox: 0.4163881993293762, loss_cls: 0.28452000200748445, loss_sem: 0.42825597524642944, loss_vote: 0.21319734320044517, one_stage_loss: 1.998462949991226, rcnn_loss_reg: 0.4315848696231842, loss_two_stage: 0.4315848696231842, 
2023-05-22 22:58:52,027   INFO  Epoch [ 6][ 150]/[1502] : lr:  1.000e-03, sem_thr: 0.05, loss_centerness: 0.7087689518928528, loss_bbox: 0.4388448533415794, loss_cls: 0.31257914945483206, loss_sem: 0.4236943897604942, loss_vote: 0.20916450664401054, one_stage_loss: 2.093051869869232, rcnn_loss_reg: 0.4489521563053131, loss_two_stage: 0.4489521563053131, 
2023-05-22 23:00:18,992   INFO  Epoch [ 6][ 200]/[1502] : lr:  1.000e-03, sem_thr: 0.05, loss_centerness: 0.6689139121770858, loss_bbox: 0.41822519689798354, loss_cls: 0.30433102548122404, loss_sem: 0.43537518590688706, loss_vote: 0.21360415518283843, one_stage_loss: 2.040449471473694, rcnn_loss_reg: 0.4586148577928543, loss_two_stage: 0.4586148577928543, 
2023-05-22 23:01:45,901   INFO  Epoch [ 6][ 250]/[1502] : lr:  1.000e-03, sem_thr: 0.05, loss_centerness: 0.627573170363903, loss_bbox: 0.3730341205000877, loss_cls: 0.2601536877453327, loss_sem: 0.40418518006801607, loss_vote: 0.18787870295345782, one_stage_loss: 1.8528248536586762, rcnn_loss_reg: 0.42514427185058595, loss_two_stage: 0.42514427185058595, 
